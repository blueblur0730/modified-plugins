#if defined __confogl_config_generator_included
	#endinput
#endif
#define __confogl_config_generator_included

void CG_OnPluginStart()
{
	RegServerCmd("sm_make_confogl", Command_DumpPluigns, "Usage: sm_make_confogl <name> <plugin_path> <cvar_path>");
}

static Action Command_DumpPluigns(int args)
{
	if (args < 2)
	{
		PrintToServer("[Confogl] Usage: sm_make_confogl <name> <plugin_path>");
		return Plugin_Handled;
	}

	char szPath[256], szEntry[256], szSearchPath[256];
	GetCmdArg(2, szPath, sizeof(szPath));	// optional/some_confogl_plugin
	Format(szSearchPath, sizeof(szSearchPath), "%s/%s", "plugins", szPath);	// plugins/optional/some_confogl_plugin
	BuildPath(Path_SM, szEntry, sizeof(szEntry), szSearchPath);

	DirectoryListing hDir = OpenDirectory(szEntry);
	if (!hDir)
	{
		PrintToServer("[Confogl] Failed to open folder path: \"%s\".", szEntry);
		return Plugin_Handled;
	}

	char szFile[256];
	FileType type;
	ArrayList hArray = new ArrayList(ByteCountToCells(sizeof(szFile)));
	while (hDir.GetNext(szFile, sizeof(szFile), type))
	{
		// Ignore "." and ".."
		if(!strcmp(szFile, ".") || !strcmp(szFile, ".."))
			continue;

		if (type != FileType_File)
			continue;

		int len = strlen(szFile);
		if( len > 4 &&
			szFile[len - 4] == '.' &&
			szFile[len - 3] == 's' &&
			szFile[len - 2] == 'm' &&
			szFile[len - 1] == 'x'
		)
		{
			Format(szFile, sizeof(szFile), "%s/%s", szPath, szFile);	// optional/some_confogl_plugin/xxx.smx
			hArray.PushString(szFile);
		}
	}

	delete hDir;

	char szName[128];
	GetCmdArg(1, szName, sizeof(szName));	// some_confogl_config

	if (!hArray.Length)
	{
		PrintToServer("[Confogl] No Plugin found in folder: \"%s\".", szEntry);
		delete hArray;
		return Plugin_Handled;
	}

	Format(szName, sizeof(szName), "cfg/cfgogl/%s/confogl_plugins.cfg", szName);	// ../../cfg/cfgogl/some_confogl_config/confogl_plugins.cfg
	File hFile = OpenFile(szName, "w");
	if (!hFile)
	{
		PrintToServer("[Confogl] Failed to open config file: \"%s\".", szName);
		delete hArray;
		return Plugin_Handled;
	}

	hFile.WriteLine("// ---------------------------------------.");
	hFile.WriteLine("// Generated by Confogl Config Generator.");
	hFile.WriteLine("//");
	hFile.WriteLine("// Author: YourName.");
	hFile.WriteLine("// Config Name: %s.", szName);
	hFile.WriteLine("// File Name: confogl_plugins.cfg.");
	hFile.WriteLine("// ---------------------------------------");

	char szPlugin[256];
	for (int i = 0; i < hArray.Length; i++)
	{
		hArray.GetString(i, szPlugin, sizeof(szPlugin));
		Format(szPlugin, sizeof(szPlugin), "sm plugins load %s", szPlugin);	// sm plugins load optional/some_confogl_plugin/xxx.smx
		hFile.WriteLine(szPlugin, sizeof(szPlugin));
	}

	PrintToServer("[Confogl] Config file generated: \"%s\".", szName);
	delete hFile;
	delete hArray;
	return Plugin_Handled;
}